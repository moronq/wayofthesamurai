{"version":3,"file":"static/js/797.e0a663be.chunk.js","mappings":"6NA2CMA,GAAiBC,EAAAA,EAAAA,GAAU,CAC7BC,KAAM,SADaD,EAlBP,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,MAC5B,OACI,kBAAMC,SAAUF,EAAhB,WAEKG,EAAAA,EAAAA,IAAY,QAAS,QAAS,CAACC,EAAAA,GAAWC,EAAAA,KAC1CF,EAAAA,EAAAA,IAAY,WAAY,WAAY,CAACC,EAAAA,GAAWC,EAAAA,GAAO,CAACC,KAAK,cAC7DH,EAAAA,EAAAA,IAAY,KAAM,aAAc,GAAIE,EAAAA,GAAO,CAACC,KAAK,YAAY,eAE7DL,IAAS,gBAAKM,UAAWC,EAAAA,EAAAA,iBAAhB,SACLP,KAEL,0BACI,8CAchB,WAAeQ,EAAAA,EAAAA,KAJS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAGiB,CAACE,MAAAA,EAAAA,IAAzC,EA1Cc,SAACC,GAMX,OAAIA,EAAMH,QACC,SAAC,KAAD,CAAUI,GAAI,cAGlB,4BACH,mCACA,SAAClB,EAAD,CAAgBK,SAVH,SAACc,GACdF,EAAMD,MAAMG,EAASC,MAAOD,EAASE,SAAUF,EAASG,sB,+OCP1DC,EAAc,SAAC,GAA8C,EAA7CC,MAA8C,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAAStB,EAAsB,EAAtBA,MAAQuB,EAAc,EAAdA,SAC3CC,EAAWF,GAAWtB,EAC5B,OACI,iBAAKM,UAAWC,EAAAA,EAAAA,YAAqB,KAAOiB,EAAWjB,EAAAA,EAAAA,MAAe,IAAtE,WACI,yBACKgB,IAEJC,IAAY,0BAAOxB,QAMnByB,EAAW,SAACZ,GACrB,IAAOO,EAA6CP,EAA7CO,MAAgCM,GAAab,EAAtCQ,KAAsCR,EAAhCc,MAAgCd,EAAzBe,SAA3B,OAAoDf,EAApD,IACA,OAAO,SAACM,GAAD,kBAAiBN,GAAjB,cAAwB,uCAAcO,GAAWM,QAG/CtB,EAAQ,SAACS,GAClB,IAAOO,EAA6CP,EAA7CO,MAAgCM,GAAab,EAAtCQ,KAAsCR,EAAhCc,MAAgCd,EAAzBe,SAA3B,OAAoDf,EAApD,IACA,OAAO,SAACM,GAAD,kBAAiBN,GAAjB,cAAwB,oCAAWO,GAAWM,QAG5CxB,EAAc,SAAC2B,EAAaC,EAAMC,EAAUC,GAA9B,IAAyCnB,EAAzC,uDAAiD,GAAIoB,EAArD,uDAA0D,GAA1D,OAAiE,4BACxF,SAAC,KAAD,QAAOJ,YAAaA,EACbC,KAAMA,EAAMC,SAAUA,EACtBC,UAAWA,GAAenB,IAChCoB,O,4EChCE,IAAM9B,EAAW,SAAA+B,GACpB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAC7B,OAAO,SAACF,GACJ,GAAIA,EAAMG,OAASD,EACf,MAAM,cAAN,OAAqBA,EAArB,e,mBCPZ,KAAgB,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB","sources":["components/Login/Login.jsx","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","webpack://react_samurai_way/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["import {Field, reduxForm} from \"redux-form\";\r\nimport {CreateField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from './../common/FormsControls/FormsControls.module.css'\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nlet LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            {CreateField(\"Email\", \"email\", [required], Input)}\r\n            {CreateField(\"Password\", \"password\", [required], Input, {type:\"password\"})}\r\n            {CreateField(null, \"rememberMe\", [], Input, {type:\"checkbox\"},'remember me')}\r\n\r\n            {error && <div className={styles.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","import React from \"react\";\r\nimport styles from './FormsControls.module.css'\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, element, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, element, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const CreateField = (placeholder, name, validate, component, props = {}, text='') => <div>\r\n    <Field placeholder={placeholder}\r\n           name={name} validate={validate}\r\n           component={component} {...props}/>\r\n    {text}\r\n</div>","export const required = value => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => {\r\n    return (value)=> {\r\n        if (value.length > maxLength){\r\n            return `max length ${maxLength} symbols`\r\n        }\r\n        return undefined\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__lRDgL\",\"error\":\"FormsControls_error__w2d0V\",\"formSummaryError\":\"FormsControls_formSummaryError__09xO5\"};"],"names":["LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","CreateField","required","Input","type","className","styles","connect","state","isAuth","auth","login","props","to","formData","email","password","rememberMe","FormControl","input","meta","touched","children","hasError","Textarea","restProps","child","element","placeholder","name","validate","component","text","value","maxLengthCreator","maxLength","length"],"sourceRoot":""}