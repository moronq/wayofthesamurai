{"version":3,"file":"static/js/672.bdd213e6.chunk.js","mappings":"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","sources":["webpack://react_samurai_way/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/common/FormsControls/FormsControls.js","hoc/withAuthRedirect.js","utils/validators/validators.js","webpack://react_samurai_way/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__U8Xk8\",\"dialogsItems\":\"Dialogs_dialogsItems__TlLFd\",\"dialog\":\"Dialogs_dialog__QIXFX\",\"messages\":\"Dialogs_messages__kNUGh\",\"message\":\"Dialogs_message__6ckwN\",\"active\":\"Dialogs_active__bkrXH\"};","import classes from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink className = {classes.dialog} to = {'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import classes from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message","import classes from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nlet maxLength100 = maxLengthCreator(100)\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = (dialogs) => {\r\n        return (\r\n            dialogs.map(el => <DialogItem name={el.name} key = {el.id} id={el.id}/>)\r\n        )\r\n    }\r\n\r\n    let messagesElements = (messages) => {\r\n        return (\r\n            messages.map(m => <Message message={m.message} key = {m.id}/>)\r\n        )\r\n    }\r\n\r\n    if(!props.isAuth){\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements(props.dialogsPage.dialogs)}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                {messagesElements(props.dialogsPage.messages)}\r\n            </div>\r\n            <AddMessageFormRedux onSubmit = {addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet AddMessageForm =(props)=>{\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name={\"newMessageBody\"} component={Textarea}\r\n                   validate = {[required, maxLength100]}placeholder={\"Enter your message\"}></Field>\r\n            <button>Send Message</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddMessageFormRedux = reduxForm(\r\n    {form: 'dialogAddMessageForm'}\r\n)(AddMessageForm)\r\n\r\nexport default Dialogs\r\n","import React from 'react';\r\nimport {addMessageActionCreator,} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        addMessage: (newMessageBody) =>{\r\n            dispatch(addMessageActionCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect (mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs)","import React from \"react\";\r\nimport styles from './FormsControls.module.css'\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, element, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, element, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const CreateField = (placeholder, name, validate, component, props = {}, text='') => <div>\r\n    <Field placeholder={placeholder}\r\n           name={name} validate={validate}\r\n           component={component} {...props}/>\r\n    {text}\r\n</div>","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent\r\n\r\n}","export const required = value => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => {\r\n    return (value)=> {\r\n        if (value.length > maxLength){\r\n            return `max length ${maxLength} symbols`\r\n        }\r\n        return undefined\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__lRDgL\",\"error\":\"FormsControls_error__w2d0V\",\"formSummaryError\":\"FormsControls_formSummaryError__09xO5\"};"],"names":["props","className","classes","to","id","name","message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","isAuth","messages","dialogs","dialogsPage","map","el","m","values","addMessage","newMessageBody","compose","connect","state","dispatch","addMessageActionCreator","withAuthRedirect","Dialogs","FormControl","input","meta","touched","error","children","hasError","styles","restProps","child","element","Input","CreateField","text","mapStateToPropsForRedirect","auth","Component","RedirectComponent","this","React","value","maxLength","length"],"sourceRoot":""}