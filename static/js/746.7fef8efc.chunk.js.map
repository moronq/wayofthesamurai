{"version":3,"file":"static/js/746.7fef8efc.chunk.js","mappings":"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","sources":["components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react_samurai_way/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react_samurai_way/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.js","components/common/FormsControls/FormsControls.js","hoc/withAuthRedirect.js","utils/validators/validators.js","webpack://react_samurai_way/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__lZFSF\"};","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = ()=> {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = ()=> {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) =>{\r\n        this.setState({\r\n          status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || \"---\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    let onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"---\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input value={status} onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import classes from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from './ProfileStatus'\r\nimport React from \"react\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={classes.descriptionBlock}>\r\n                <img src={profile.photos.large}/>\r\n                ava + description\r\n                <ProfileStatusWithHooks status = {status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__7DZyU\",\"posts\":\"MyPosts_posts__X3YO1\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Bzh9O\"};","import classes from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n            <div className={classes.item}>\r\n                <img src=\"https://memax.club/wp-content/uploads/2019/06/milye_kartinki_1_03072146.jpg\" alt=\"\"/>\r\n                {props.message}\r\n                <div>\r\n                    <span>{props.likeCount} Like</span>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Post","import classes from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPosts = React.memo( props => {\r\n\r\n    let postsElements = (posts) => {\r\n        return (\r\n            posts.map(el => <Post message={el.message} key={el.id} likeCount={el.likeCount}/>)\r\n        )\r\n    }\r\n\r\n    let onAddPost = (value) => {\r\n        props.addPost(value.postBody)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <NewPostReduxForm onSubmit={onAddPost}/>\r\n            </div>\r\n            <div className={classes.posts}>\r\n                {postsElements(props.posts)}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={\"postBody\"} validate={[required, maxLength10,]}></Field>\r\n            </div>\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst NewPostReduxForm = reduxForm({\r\n    form: 'ProfileAddNewPostForm'\r\n})(AddNewPostForm)\r\n\r\n\r\nexport default MyPosts","import React from 'react'\r\nimport {addPostActionCreator,} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (postBody)=>{\r\n            dispatch(addPostActionCreator(postBody))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import classes from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport React from \"react\";\r\n\r\n\r\nconst Profile = ({profile, status, updateStatus}) => {\r\n    return (\r\n        <div className={classes.content}>\r\n            <ProfileInfo profile = {profile} status = {status} updateStatus = {updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUsersProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUsersProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props} profile = {this.props.profile} status = {this.props.status} updateStatus = {this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUsersProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","import React from \"react\";\r\nimport styles from './FormsControls.module.css'\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, element, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, element, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const CreateField = (placeholder, name, validate, component, props = {}, text='') => <div>\r\n    <Field placeholder={placeholder}\r\n           name={name} validate={validate}\r\n           component={component} {...props}/>\r\n    {text}\r\n</div>","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent\r\n\r\n}","export const required = value => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => {\r\n    return (value)=> {\r\n        if (value.length > maxLength){\r\n            return `max length ${maxLength} symbols`\r\n        }\r\n        return undefined\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__lRDgL\",\"error\":\"FormsControls_error__w2d0V\",\"formSummaryError\":\"FormsControls_formSummaryError__09xO5\"};"],"names":["React","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","value","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","profile","className","classes","src","photos","large","Preloader","alt","message","likeCount","maxLength10","maxLengthCreator","MyPosts","posts","NewPostReduxForm","onSubmit","addPost","postBody","map","el","id","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","required","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUsersProfile","getStatus","compose","auth","isAuth","withRouter","withAuthRedirect","FormControl","input","meta","touched","error","children","hasError","styles","restProps","child","element","Input","CreateField","placeholder","text","mapStateToPropsForRedirect","Component","RedirectComponent","to","maxLength","length"],"sourceRoot":""}